# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c
compiler: gcc

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.stack

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:

  - env: ARGS="--resolver lts-5" GHC="7.10.3" BUILDARGS=""

  - env: ARGS="--resolver lts-7" GHC="8.0.1" BUILDARGS=""

  - env: ARGS="--resolver lts-9" GHC="8.0.2" BUILDARGS="--pedantic"

  - env: ARGS="--resolver lts-10" GHC="8.2.2" BUILDARGS="--pedantic"

  # Build on OS X in addition to Linux
  - env: ARGS="" GHC="" BUILDARGS=""
    os: osx

before_install:
- mkdir -p ~/.local/bin
- |
  if [[ "${TRAVIS_OS_NAME}" = "osx" ]]
  then
    travis_retry curl -sSL https://www.stackage.org/stack/${TRAVIS_OS_NAME}-x86_64 \
      | tar xz --strip-components=1 -C ~/.local/bin --include   '*/stack'
  else
    travis_retry curl -sSL https://www.stackage.org/stack/${TRAVIS_OS_NAME}-x86_64 \
      | tar xz --strip-components=1 -C ~/.local/bin --wildcards '*/stack'
  fi

install:
- stack --no-terminal --install-ghc $ARGS install hsc2hs
# Fix dependency issue for vector-algoritms for lts-3 and lts-5
- stack --no-terminal --install-ghc $ARGS install mtl mwc-random
- stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies

script:
- stack --no-terminal $ARGS test $BUILDARGS --bench --no-run-benchmarks --haddock --no-haddock-deps
